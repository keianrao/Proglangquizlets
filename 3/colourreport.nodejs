#!/usr/bin/env nodejs

const { execSync } = require('child_process');

var bufferOutput = execSync('./report.sh', options = {
    env: {
        "NAME_1": "State",
        "WIDTH_1": 16,
        "NAME_2": "Population",
        "WIDTH_2": 12,
        "NAME_3": "Area (km^2)",
        "WIDTH_3": 12
    },
    input:
        "Johor:~3.77M:~19200\n" +
        "Kedah:~2.19M:~9500\n" +
        "Kelantan:~1.89M:~15100\n" +
        "Malacca:~930K:~1700\n" +
        "Negeri Sembilan:~1.132:~6700\n" +
        "Pahang:~1.68M:~36100\n" +
        "Penang:~1.78M:~1000\n" +
        "Perak:~2.51M:~21000\n" +
        "Perlis:~250K:~821\n" +
        "Sabah:~3.90M:~73600\n" +
        "Sarawak:~2.82M:~124500\n" +
        "Selangor:~6.54M:~9500\n" +
        "Terengganu:~1.25M:~13000\n"
});
var stringOutput = bufferOutput.toString();
var [titleLine, ...dataLines] = stringOutput.split('\n');

// We'll prepend every length of spaces with a resetter, and append with
// an underliner. If there are no spaces between two columns, then the
// whole thing will end up underlined which is correct behaviour anyways.
const resetter = "\u001B[0m";
const underliner = "\u001B[4m";
titleLine =
    underliner // Start of line
    + titleLine.replace(/ +/g, resetter + "$&" + underliner)
    + resetter; // End of line
console.log(titleLine);

for (var dataLine of dataLines)
{
    // We can do something similar to the above. We capture the number lines
    // column in a regex, then prepend a colour code, append a resetter.
    // But it's unwise to ignore the case where there's no spaces to
    // the next column, as we don't want the first column's values to be
    // greyed out too. There is nothing we can do regex-wise, we have to use
    // knowledge about how big what we're capturing should be. Above, we
    // could've recorded the length of the number line column - but we know
    // it has to be 4, so we're just going to use /^..../.
    const grey = "\u001B[90m";
    dataLine = dataLine.replace(/^..../, grey + "$&" + resetter);
    // This may have a very faint effect - but it is working.
    // The problem should give us something more obvious..
    console.log(dataLine);
}
